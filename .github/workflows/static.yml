name: ci

on:
  push:
    branches:
      - dev

permissions:
  pull-requests: write

env:
  GITHUB_TOKEN: ${{ secrets.PAT }}

jobs:
  basic:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

  docker:
    needs: [basic]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Логинимся в кастомный docker-registry
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.REGISTRY_URL }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      # Запускаем docker-команду
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          # Путь в котором будут выполняться комманды для сборки
          context: ./static-website
          file: ./static-website/docker/prod/Dockerfile
          push: true
          tags: docker-registry.toxiccat.ru/stripkun-static-website:latest

  # Автоматическое создание Pull Request'a из DEV ветки в MAIN
  # Автоматический merge Pull Request'a
  auto-pr-mr:
    needs: [basic, docker]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Auto Pull Request Create
        run:
          gh pr create --title "Auto PR from DEV to MAIN"
          --body "Auto request from CI/CD"

      - name: Auto Merge Pull Request
        run: gh pr merge --auto --merge

        # name: ci
# on:
#   push:
#     branches:
#       # - main
#       - dev
#   # pull_request:
#   #   branches:
#   #     - main

# jobs:
#   ci:
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v4
#       - run: corepack enable
#       - uses: actions/setup-node@v3
#         with:
#           node-version: 20
#           # cache: "npm"

#       # Nuxt 3
#       # Install dependencies
#       - name: install
#         working-directory: ./frontend-monolith-nuxt3
#         run: npm i

#       # Generate types after installing dependencies
#       - name: postinstall
#         working-directory: ./frontend-monolith-nuxt3
#         run: npm run postinstall

#       - name: Sync Status
#         run: git diff --exit-code

#       - name: Build
#         working-directory: ./frontend-monolith-nuxt3
#         run: npm run build

#       # Next 14
#       # Install dependencies
#       - name: install
#         working-directory: ./fullstack-monolith-nextjs14
#         run: npm i

#       # Run Linter
#       - name: lint
#         working-directory: ./fullstack-monolith-nextjs14
#         run: npm run lint

#       - name: Sync Status
#         run: git diff --exit-code

#       - name: Build
#         working-directory: ./fullstack-monolith-nextjs14
#         run: npm run build
#         env: # Or as an environment variable
#           SECURITY_FORM_HASH_KEY:
#             ${{ secrets.TEST_SECURITY_FORM_HASH_KEY }}
